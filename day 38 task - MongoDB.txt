Day 38 task: https://github.com/rvsp/database/tree/master/mongodb


use products_db

db.createCollection("products_collection");

db.products_collection.insert(product.json);


Tasks:-

1) Find all the information about each product

   db.products_collection.find();

2) Find the product price which are between 400 to 800

    db.products_collection.find({product_price:{$gt: 400,$lt: 800}});

3) Find the product price which are not between 400 to 600

    db.products_collection.find({product_price:{$not: {$gt: 400,$lt: 600}}});

4) List the four product which are grater than 500 in price 

    db.products_collection.find({product_price:{$gt: 500}});

    db.products_collection.find().forEach(product=>{
        if(product.product_price>500){
            console.log(product);
        }
    });

5) Find the product name and product material of each product

    db.products_collection.find({},{product_name:1,product_material:1,_id:0});

    db.products_collection.find().forEach(product=>{
    console.log(product.id," Product Name: ",product.product_name,", ", "Product Material: ",product.product_material);
    });

6) Find the product with a row id of 10

    db.products_collection.find({id:"10"});

7) Find only the product name and product material

    db.products_collection.find({},{product_name:1,product_material:1,_id:0});

    db.products_collection.find().forEach(product=>{
    console.log(product.id," Product Name: ",product.product_name,", ", "Product Material: ",product.product_material);
    });

8) Find all products which contain the value of soft in product material 

    db.products_collection.find({product_material:"Soft"});

9) Find products which contain product color indigo  and product price 492.00

    db.products_collection.find({$and: [{product_color:"indigo"},{product_price:492}]});

    db.products_collection.find({$or: [{product_color:"indigo"},{product_price:492}]});

10) Delete the products which product price value are same


    db.products_collection.aggregate([
        {
            $group: { _id: "$product_price",count:{$sum: 1}}
        },
        {
            $project:{ Price:"$_id",Count:"$count",_id:0 }
        }
        ]).forEach(d=>{
            if(d.Count==2){
                db.products_collection.remove({product_price: d.Price})
            }
        });